package machine;

import static mame.common.*;
import static mame.commonH.*;
import static arcadeflex.libc.*;
import static mame.memory.*;

public class segacrpt {
    
    public static void sega_decode(char xortable[][])
    {
    	int A;
    	UBytePtr rom = memory_region(REGION_CPU1);
    	int diff = memory_region_length(REGION_CPU1) / 2;
    
    
    	memory_set_opcode_base(0,new UBytePtr(rom,diff));
    
    	for (A = 0x0000;A < 0x8000;A++)
    	{
    		int row,col;
    		char src;
    
    
    		src = rom.read(A);
    
    		/* pick the translation table from bits 0, 4, 8 and 12 of the address */
    		row = (A & 1) + (((A >> 4) & 1) << 1) + (((A >> 8) & 1) << 2) + (((A >> 12) & 1) << 3);
    
    		/* pick the offset in the table from bits 3 and 5 of the source data */
    		col = ((src >> 3) & 1) + (((src >> 5) & 1) << 1);
    		/* the bottom half of the translation table is the mirror image of the top */
    		if ((src & 0x80)!=0) col = 3 - col;
    
    		/* decode the opcodes */
    		rom.write(A + diff,src ^ xortable[2*row][col]);
    
    		/* decode the data */
    		rom.write(A,src ^ xortable[2*row+1][col]);
    
    		if (xortable[2*row][col] == 0xff)	/* table incomplete! (for development) */
    			rom.write(A + diff,0x00);
    		if (xortable[2*row+1][col] == 0xff)	/* table incomplete! (for development) */
    			rom.write(A,0xee);
    	}
    
    	/* copy the opcodes from the not encrypted part of the ROMs */
    	for (A = 0x8000;A < diff;A++)
    		rom.write(A + diff,rom.read(A));
    }
    
    
    
    public static void pengo_decode()
    {
    	char xortable[][] =
    	{
    		/*       opcode                   data                     address      */
    		/*  A    B    C    D         A    B    C    D                           */
    		{ 0xa0,0x88,0x88,0xa0 }, { 0x28,0xa0,0x28,0xa0 },	/* ...0...0...0...0 */
    		{ 0x28,0xa0,0x28,0xa0 }, { 0xa0,0x88,0x88,0xa0 },	/* ...0...0...0...1 */
    		{ 0xa0,0x88,0x00,0x28 }, { 0xa0,0x88,0x00,0x28 },	/* ...0...0...1...0 */
    		{ 0x08,0x20,0xa8,0x80 }, { 0xa0,0x88,0x88,0xa0 },	/* ...0...0...1...1 */
    		{ 0x08,0x08,0xa8,0xa8 }, { 0x28,0xa0,0x28,0xa0 },	/* ...0...1...0...0 */
    		{ 0xa0,0x88,0x00,0x28 }, { 0x08,0x08,0xa8,0xa8 },	/* ...0...1...0...1 */
    		{ 0xa0,0x88,0x00,0x28 }, { 0xa0,0x88,0x00,0x28 },	/* ...0...1...1...0 */
    		{ 0xa0,0x88,0x00,0x28 }, { 0x00,0x00,0x00,0x00 },	/* ...0...1...1...1 */
    		{ 0x88,0x88,0x28,0x28 }, { 0xa0,0x88,0x00,0x28 },	/* ...1...0...0...0 */
    		{ 0x88,0x88,0x28,0x28 }, { 0x00,0x00,0x00,0x00 },	/* ...1...0...0...1 */
    		{ 0x08,0x20,0xa8,0x80 }, { 0x08,0x20,0xa8,0x80 },	/* ...1...0...1...0 */
    		{ 0xa0,0x88,0x88,0xa0 }, { 0xa0,0x88,0x00,0x28 },	/* ...1...0...1...1 */
    		{ 0x08,0x08,0xa8,0xa8 }, { 0x88,0x88,0x28,0x28 },	/* ...1...1...0...0 */
    		{ 0x00,0x00,0x00,0x00 }, { 0x88,0x88,0x28,0x28 },	/* ...1...1...0...1 */
    		{ 0x08,0x20,0xa8,0x80 }, { 0x08,0x20,0xa8,0x80 },	/* ...1...1...1...0 */
    		{ 0x08,0x08,0xa8,0xa8 }, { 0xa0,0x88,0x00,0x28 }	/* ...1...1...1...1 */
    	};
    
    
    	sega_decode(xortable);
    }
    
    
    public static void szaxxon_decode()
    {
    	char xortable[][] =
    	{
    		/*       opcode                   data                     address      */
    		/*  A    B    C    D         A    B    C    D                           */
    		{ 0x88,0xa0,0xa0,0x88 }, { 0x28,0x28,0x88,0x88 },	/* ...0...0...0...0 */
    		{ 0x08,0x20,0xa8,0x80 }, { 0x88,0x88,0x28,0x28 },	/* ...0...0...0...1 */
    		{ 0xa8,0x20,0x80,0x08 }, { 0x20,0xa8,0x20,0xa8 },	/* ...0...0...1...0 */
    		{ 0x88,0xa0,0xa0,0x88 }, { 0x28,0x28,0x88,0x88 },	/* ...0...0...1...1 */
    		{ 0x08,0x20,0xa8,0x80 }, { 0x88,0x88,0x28,0x28 },	/* ...0...1...0...0 */
    		{ 0x88,0xa0,0xa0,0x88 }, { 0x28,0x28,0x88,0x88 },	/* ...0...1...0...1 */
    		{ 0xa8,0x20,0x80,0x08 }, { 0x20,0xa8,0x20,0xa8 },	/* ...0...1...1...0 */
    		{ 0x08,0x20,0xa8,0x80 }, { 0x88,0x88,0x28,0x28 },	/* ...0...1...1...1 */
    		{ 0x08,0x20,0xa8,0x80 }, { 0x88,0x88,0x28,0x28 },	/* ...1...0...0...0 */
    		{ 0x88,0xa0,0xa0,0x88 }, { 0x28,0x28,0x88,0x88 },	/* ...1...0...0...1 */
    		{ 0x88,0xa0,0xa0,0x88 }, { 0x28,0x28,0x88,0x88 },	/* ...1...0...1...0 */
    		{ 0xa8,0x20,0x80,0x08 }, { 0x20,0xa8,0x20,0xa8 },	/* ...1...0...1...1 */
    		{ 0xa8,0x20,0x80,0x08 }, { 0x20,0xa8,0x20,0xa8 },	/* ...1...1...0...0 */
    		{ 0xa8,0x20,0x80,0x08 }, { 0x20,0xa8,0x20,0xa8 },	/* ...1...1...0...1 */
    		{ 0x08,0x20,0xa8,0x80 }, { 0x88,0x88,0x28,0x28 },	/* ...1...1...1...0 */
    		{ 0x88,0xa0,0xa0,0x88 }, { 0x28,0x28,0x88,0x88 }	/* ...1...1...1...1 */
    	};
    
    
    	sega_decode(xortable);
    }
    
    
    /*TODO*///void suprloco_decode(void)
    /*TODO*///{
    /*TODO*///	static const unsigned char xortable[32][4] =
    /*TODO*///	{
    /*TODO*///		/*       opcode                   data                     address      */
    /*TODO*///		/*  A    B    C    D         A    B    C    D                           */
    /*TODO*///		{ 0x20,0x08,0x80,0xa8 }, { 0xa8,0xa8,0xa8,0xa8 },	/* ...0...0...0...0 */
    /*TODO*///		{ 0x20,0x08,0x80,0xa8 }, { 0xa8,0xa8,0xa8,0xa8 },	/* ...0...0...0...1 */
    /*TODO*///		{ 0x20,0x08,0x80,0xa8 }, { 0xa8,0xa8,0xa8,0xa8 },	/* ...0...0...1...0 */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0xa0,0x88,0x88,0xa0 },	/* ...0...0...1...1 */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0xa0,0x88,0x88,0xa0 },	/* ...0...1...0...0 */
    /*TODO*///		{ 0x20,0x08,0x80,0xa8 }, { 0xa8,0xa8,0xa8,0xa8 },	/* ...0...1...0...1 */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0xa0,0x88,0x88,0xa0 },	/* ...0...1...1...0 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0x88,0x88,0x28,0x28 },	/* ...0...1...1...1 */
    /*TODO*///		{ 0x20,0x08,0x80,0xa8 }, { 0xa8,0xa8,0xa8,0xa8 },	/* ...1...0...0...0 */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0xa0,0x88,0x88,0xa0 },	/* ...1...0...0...1 */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0xa0,0x88,0x88,0xa0 },	/* ...1...0...1...0 */
    /*TODO*///		{ 0x20,0x08,0x80,0xa8 }, { 0xa8,0xa8,0xa8,0xa8 },	/* ...1...0...1...1 */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0xa0,0x88,0x88,0xa0 },	/* ...1...1...0...0 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0x88,0x88,0x28,0x28 },	/* ...1...1...0...1 */
    /*TODO*///		{ 0x20,0x08,0x80,0xa8 }, { 0xa8,0xa8,0xa8,0xa8 },	/* ...1...1...1...0 */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0xa0,0x88,0x88,0xa0 }	/* ...1...1...1...1 */
    /*TODO*///	};
    /*TODO*///
    /*TODO*///
    /*TODO*///	sega_decode(xortable);
    /*TODO*///}
    /*TODO*///
    /*TODO*///
    public static void yamato_decode()
    {
    	char xortable[][] =
    	{
    		/*       opcode                   data                     address      */
    		/*  A    B    C    D         A    B    C    D                           */
    		{ 0x88,0xa0,0x28,0x00 }, { 0x88,0xa0,0xa0,0x88 },	/* ...0...0...0...0 */
    		{ 0x20,0xa8,0x08,0x80 }, { 0x88,0xa0,0xa0,0x88 },	/* ...0...0...0...1 */
    		{ 0x88,0xa0,0xa0,0x88 }, { 0x88,0xa0,0xa0,0x88 },	/* ...0...0...1...0 */
    		{ 0x88,0xa0,0xa0,0x88 }, { 0x20,0xa8,0x08,0x80 },	/* ...0...0...1...1 */
    		{ 0x88,0xa0,0x28,0x00 }, { 0x88,0xa0,0x28,0x00 },	/* ...0...1...0...0 */
    		{ 0x88,0xa0,0xa0,0x88 }, { 0x88,0xa0,0xa0,0x88 },	/* ...0...1...0...1 */
    		{ 0x20,0xa8,0x08,0x80 }, { 0x20,0xa8,0x08,0x80 },	/* ...0...1...1...0 */
    		{ 0x88,0xa0,0xa0,0x88 }, { 0x88,0xa0,0xa0,0x88 },	/* ...0...1...1...1 */
    		{ 0x20,0xa8,0x08,0x80 }, { 0x88,0xa0,0x28,0x00 },	/* ...1...0...0...0 */
    		{ 0x20,0xa8,0x08,0x80 }, { 0x28,0x28,0x88,0x88 },	/* ...1...0...0...1 */
    		{ 0xa0,0x28,0xa0,0x28 }, { 0x20,0xa8,0x08,0x80 },	/* ...1...0...1...0 */
    		{ 0x28,0x28,0x88,0x88 }, { 0x20,0xa8,0x08,0x80 },	/* ...1...0...1...1 */
    		{ 0x20,0xa8,0x08,0x80 }, { 0x88,0xa0,0x28,0x00 },	/* ...1...1...0...0 */
    		{ 0x88,0xa0,0x28,0x00 }, { 0x88,0xa0,0x28,0x00 },	/* ...1...1...0...1 */
    		{ 0xa0,0x28,0xa0,0x28 }, { 0x88,0x00,0xa0,0x28 },	/* ...1...1...1...0 */
    		{ 0x20,0xa8,0x08,0x80 }, { 0x00,0x00,0x00,0x00 }	/* ...1...1...1...1 */
    	};
    
    
    	sega_decode(xortable);
    }
    
    /*TODO*///
    /*TODO*///void sindbadm_decode(void)
    /*TODO*///{
    /*TODO*///	static const unsigned char xortable[32][4] =
    /*TODO*///	{
    /*TODO*///		/*       opcode                   data                     address      */
    /*TODO*///		/*  A    B    C    D         A    B    C    D                           */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0x88,0x88,0x28,0x28 },	/* ...0...0...0...0 */
    /*TODO*///		{ 0xa8,0xa8,0xa8,0xa8 }, { 0x00,0x28,0xa0,0x88 },	/* ...0...0...0...1 */
    /*TODO*///		{ 0xa8,0xa8,0xa8,0xa8 }, { 0x00,0x28,0xa0,0x88 },	/* ...0...0...1...0 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0x88,0x88,0x28,0x28 },	/* ...0...0...1...1 */
    /*TODO*///		{ 0xa8,0x80,0x80,0xa8 }, { 0xa0,0x28,0x88,0x00 },	/* ...0...1...0...0 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0x88,0x88,0x28,0x28 },	/* ...0...1...0...1 */
    /*TODO*///		{ 0xa8,0xa8,0xa8,0xa8 }, { 0x00,0x28,0xa0,0x88 },	/* ...0...1...1...0 */
    /*TODO*///		{ 0xa8,0xa8,0xa8,0xa8 }, { 0x00,0x28,0xa0,0x88 },	/* ...0...1...1...1 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0x88,0x88,0x28,0x28 },	/* ...1...0...0...0 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0x88,0x88,0x28,0x28 },	/* ...1...0...0...1 */
    /*TODO*///		{ 0xa8,0xa8,0xa8,0xa8 }, { 0x00,0x28,0xa0,0x88 },	/* ...1...0...1...0 */
    /*TODO*///		{ 0xa8,0xa8,0xa8,0xa8 }, { 0x00,0x28,0xa0,0x88 },	/* ...1...0...1...1 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0x88,0x88,0x28,0x28 },	/* ...1...1...0...0 */
    /*TODO*///		{ 0xa8,0x80,0x80,0xa8 }, { 0xa0,0x28,0x88,0x00 },	/* ...1...1...0...1 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0x88,0x88,0x28,0x28 },	/* ...1...1...1...0 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0x88,0x88,0x28,0x28 }	/* ...1...1...1...1 */
    /*TODO*///	};
    /*TODO*///
    /*TODO*///
    /*TODO*///	sega_decode(xortable);
    /*TODO*///}
    /*TODO*///
    /*TODO*///
    /*TODO*///void regulus_decode(void)
    /*TODO*///{
    /*TODO*///	static const unsigned char xortable[32][4] =
    /*TODO*///	{
    /*TODO*///		/*       opcode                   data                     address      */
    /*TODO*///		/*  A    B    C    D         A    B    C    D                           */
    /*TODO*///		{ 0x28,0x00,0x88,0xa0 }, { 0x88,0x88,0x28,0x28 },	/* ...0...0...0...0 */
    /*TODO*///		{ 0x28,0x00,0x88,0xa0 }, { 0x28,0xa0,0x28,0xa0 },	/* ...0...0...0...1 */
    /*TODO*///		{ 0x88,0x88,0x28,0x28 }, { 0x88,0x00,0xa0,0x28 },	/* ...0...0...1...0 */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0x28,0xa0,0x28,0xa0 },	/* ...0...0...1...1 */
    /*TODO*///		{ 0x28,0x00,0x88,0xa0 }, { 0x88,0x88,0x28,0x28 },	/* ...0...1...0...0 */
    /*TODO*///		{ 0x88,0x88,0x28,0x28 }, { 0x88,0x88,0x28,0x28 },	/* ...0...1...0...1 */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0x88,0x00,0xa0,0x28 },	/* ...0...1...1...0 */
    /*TODO*///		{ 0xa0,0x88,0x88,0xa0 }, { 0xa0,0x88,0x88,0xa0 },	/* ...0...1...1...1 */
    /*TODO*///		{ 0x80,0xa8,0x20,0x08 }, { 0x28,0x00,0x88,0xa0 },	/* ...1...0...0...0 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0x28,0x00,0x88,0xa0 },	/* ...1...0...0...1 */
    /*TODO*///		{ 0x80,0xa8,0x20,0x08 }, { 0x80,0xa8,0x20,0x08 },	/* ...1...0...1...0 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0x80,0xa8,0x20,0x08 },	/* ...1...0...1...1 */
    /*TODO*///		{ 0xa0,0x88,0x88,0xa0 }, { 0x28,0x00,0x88,0xa0 },	/* ...1...1...0...0 */
    /*TODO*///		{ 0x80,0xa8,0x20,0x08 }, { 0xa0,0x88,0x88,0xa0 },	/* ...1...1...0...1 */
    /*TODO*///		{ 0xa0,0x88,0x88,0xa0 }, { 0x80,0xa8,0x20,0x08 },	/* ...1...1...1...0 */
    /*TODO*///		{ 0xa0,0x88,0x88,0xa0 }, { 0xa0,0x88,0x88,0xa0 }	/* ...1...1...1...1 */
    /*TODO*///	};
    /*TODO*///
    /*TODO*///
    /*TODO*///	sega_decode(xortable);
    /*TODO*///}
    /*TODO*///
    /*TODO*///
    /*TODO*///void mrviking_decode(void)
    /*TODO*///{
    /*TODO*///	static const unsigned char xortable[32][4] =
    /*TODO*///	{
    /*TODO*///		/*       opcode                   data                     address      */
    /*TODO*///		/*  A    B    C    D         A    B    C    D                           */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0x88,0x88,0x28,0x28 },	/* ...0...0...0...0 */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0x88,0x88,0x28,0x28 },	/* ...0...0...0...1 */
    /*TODO*///		{ 0x28,0x00,0x88,0xa0 }, { 0x28,0xa0,0x28,0xa0 },	/* ...0...0...1...0 */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0x88,0x00,0xa0,0x28 },	/* ...0...0...1...1 */
    /*TODO*///		{ 0x28,0x00,0x88,0xa0 }, { 0x88,0x88,0x28,0x28 },	/* ...0...1...0...0 */
    /*TODO*///		{ 0x88,0x88,0x28,0x28 }, { 0x28,0xa0,0x28,0xa0 },	/* ...0...1...0...1 */
    /*TODO*///		{ 0xa0,0x88,0x88,0xa0 }, { 0x28,0x00,0x88,0xa0 },	/* ...0...1...1...0 */
    /*TODO*///		{ 0xa0,0x88,0x88,0xa0 }, { 0xa0,0x88,0x88,0xa0 },	/* ...0...1...1...1 */
    /*TODO*///		{ 0x88,0x88,0x28,0x28 }, { 0x88,0x88,0x28,0x28 },	/* ...1...0...0...0 */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0x88,0x88,0x28,0x28 },	/* ...1...0...0...1 */
    /*TODO*///		{ 0xa0,0x88,0x00,0x28 }, { 0x28,0x00,0x88,0xa0 },	/* ...1...0...1...0 */
    /*TODO*///		{ 0xa0,0x88,0x00,0x28 }, { 0x88,0x00,0xa0,0x28 },	/* ...1...0...1...1 */
    /*TODO*///		{ 0x28,0x00,0x88,0xa0 }, { 0xa0,0x88,0x00,0x28 },	/* ...1...1...0...0 */
    /*TODO*///		{ 0xa0,0x88,0x00,0x28 }, { 0xa0,0x88,0x00,0x28 },	/* ...1...1...0...1 */
    /*TODO*///		{ 0xa0,0x88,0x88,0xa0 }, { 0x28,0x00,0x88,0xa0 },	/* ...1...1...1...0 */
    /*TODO*///		{ 0xa0,0x88,0x00,0x28 }, { 0xa0,0x88,0x88,0xa0 }	/* ...1...1...1...1 */
    /*TODO*///	};
    /*TODO*///
    /*TODO*///
    /*TODO*///	sega_decode(xortable);
    /*TODO*///}
    /*TODO*///
    /*TODO*///
    /*TODO*///void swat_decode(void)
    /*TODO*///{
    /*TODO*///	static const unsigned char xortable[32][4] =
    /*TODO*///	{
    /*TODO*///		/*       opcode                   data                     address      */
    /*TODO*///		/*  A    B    C    D         A    B    C    D                           */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0xa0,0xa0,0xa0,0xa0 },	/* ...0...0...0...0 */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0x88,0xa0,0xa0,0x88 },	/* ...0...0...0...1 */
    /*TODO*///		{ 0xa0,0x88,0x00,0x28 }, { 0x88,0x00,0xa0,0x28 },	/* ...0...0...1...0 */
    /*TODO*///		{ 0xa0,0xa0,0xa0,0xa0 }, { 0x88,0x00,0xa0,0x28 },	/* ...0...0...1...1 */
    /*TODO*///		{ 0x28,0x28,0x88,0x88 }, { 0xa0,0xa0,0xa0,0xa0 },	/* ...0...1...0...0 */
    /*TODO*///		{ 0x88,0xa0,0xa0,0x88 }, { 0x28,0x28,0x88,0x88 },	/* ...0...1...0...1 */
    /*TODO*///		{ 0xa0,0x88,0x00,0x28 }, { 0xa0,0xa0,0xa0,0xa0 },	/* ...0...1...1...0 */
    /*TODO*///		{ 0x28,0x28,0x88,0x88 }, { 0xa0,0xa0,0xa0,0xa0 },	/* ...0...1...1...1 */
    /*TODO*///		{ 0xa0,0x88,0x00,0x28 }, { 0xa0,0x88,0x00,0x28 },	/* ...1...0...0...0 */
    /*TODO*///		{ 0xa0,0x28,0xa0,0x28 }, { 0x88,0xa0,0xa0,0x88 },	/* ...1...0...0...1 */
    /*TODO*///		{ 0xa0,0x28,0xa0,0x28 }, { 0xa0,0x28,0xa0,0x28 },	/* ...1...0...1...0 */
    /*TODO*///		{ 0xa0,0x28,0xa0,0x28 }, { 0xa0,0x28,0xa0,0x28 },	/* ...1...0...1...1 */
    /*TODO*///		{ 0xa0,0x88,0x00,0x28 }, { 0xa0,0x88,0x00,0x28 },	/* ...1...1...0...0 */
    /*TODO*///		{ 0x88,0xa0,0xa0,0x88 }, { 0x28,0x28,0x88,0x88 },	/* ...1...1...0...1 */
    /*TODO*///		{ 0xa0,0xa0,0xa0,0xa0 }, { 0xa0,0x88,0x00,0x28 },	/* ...1...1...1...0 */
    /*TODO*///		{ 0x28,0x28,0x88,0x88 }, { 0xa0,0xa0,0xa0,0xa0 }	/* ...1...1...1...1 */
    /*TODO*///	};
    /*TODO*///
    /*TODO*///
    /*TODO*///	sega_decode(xortable);
    /*TODO*///}
    /*TODO*///
    /*TODO*///
    /*TODO*///void flicky_decode(void)
    /*TODO*///{
    /*TODO*///	static const unsigned char xortable[32][4] =
    /*TODO*///	{
    /*TODO*///		/*       opcode                   data                     address      */
    /*TODO*///		/*  A    B    C    D         A    B    C    D                           */
    /*TODO*///		{ 0x08,0x80,0x20,0xa8 }, { 0xa0,0x88,0x88,0xa0 },	/* ...0...0...0...0 */
    /*TODO*///		{ 0x80,0x08,0x80,0x08 }, { 0x88,0x88,0x28,0x28 },	/* ...0...0...0...1 */
    /*TODO*///		{ 0xa0,0x88,0x88,0xa0 }, { 0x28,0x00,0x00,0x28 },	/* ...0...0...1...0 */
    /*TODO*///		{ 0x28,0x00,0x00,0x28 }, { 0xa0,0x88,0x88,0xa0 },	/* ...0...0...1...1 */
    /*TODO*///		{ 0x08,0x80,0x20,0xa8 }, { 0x80,0x08,0x80,0x08 },	/* ...0...1...0...0 */
    /*TODO*///		{ 0x80,0x08,0x80,0x08 }, { 0x88,0x88,0x28,0x28 },	/* ...0...1...0...1 */
    /*TODO*///		{ 0x28,0x00,0x00,0x28 }, { 0x28,0x00,0x00,0x28 },	/* ...0...1...1...0 */
    /*TODO*///		{ 0x28,0x00,0x00,0x28 }, { 0x88,0x88,0x28,0x28 },	/* ...0...1...1...1 */
    /*TODO*///		{ 0x08,0x80,0x20,0xa8 }, { 0xa8,0x80,0x08,0x20 },	/* ...1...0...0...0 */
    /*TODO*///		{ 0xa8,0x80,0x08,0x20 }, { 0x80,0x08,0x80,0x08 },	/* ...1...0...0...1 */
    /*TODO*///		{ 0x28,0x00,0x00,0x28 }, { 0x88,0x88,0x28,0x28 },	/* ...1...0...1...0 */
    /*TODO*///		{ 0xa8,0x80,0x08,0x20 }, { 0x88,0x88,0x28,0x28 },	/* ...1...0...1...1 */
    /*TODO*///		{ 0x08,0x80,0x20,0xa8 }, { 0x80,0x08,0x80,0x08 },	/* ...1...1...0...0 */
    /*TODO*///		{ 0xa8,0x80,0x08,0x20 }, { 0x80,0x08,0x80,0x08 },	/* ...1...1...0...1 */
    /*TODO*///		{ 0x28,0x00,0x00,0x28 }, { 0x28,0x00,0x00,0x28 },	/* ...1...1...1...0 */
    /*TODO*///		{ 0x08,0x80,0x20,0xa8 }, { 0x88,0x88,0x28,0x28 }	/* ...1...1...1...1 */
    /*TODO*///	};
    /*TODO*///
    /*TODO*///
    /*TODO*///	sega_decode(xortable);
    /*TODO*///}
    /*TODO*///
    /*TODO*///
    public static void futspy_decode()
    {
    	char xortable[][] =
    	{
    		/*       opcode                   data                     address      */
    		/*  A    B    C    D         A    B    C    D                           */
    		{ 0x28,0x00,0x00,0x28 }, { 0x28,0x00,0x00,0x28 },	/* ...0...0...0...0 */
    		{ 0x80,0x08,0x80,0x08 }, { 0x08,0x80,0x20,0xa8 },	/* ...0...0...0...1 */
    		{ 0x80,0x08,0x80,0x08 }, { 0x08,0x80,0x20,0xa8 },	/* ...0...0...1...0 */
    		{ 0xa0,0x88,0x00,0x28 }, { 0x20,0x20,0x80,0x80 },	/* ...0...0...1...1 */
    		{ 0x28,0x00,0x00,0x28 }, { 0x88,0x88,0x88,0x88 },	/* ...0...1...0...0 */
    		{ 0x80,0x08,0x80,0x08 }, { 0x08,0x80,0x20,0xa8 },	/* ...0...1...0...1 */
    		{ 0x80,0x08,0x80,0x08 }, { 0x20,0x20,0x80,0x80 },	/* ...0...1...1...0 */
    		{ 0x20,0x20,0x80,0x80 }, { 0x08,0x80,0x20,0xa8 },	/* ...0...1...1...1 */
    		{ 0x88,0x88,0x88,0x88 }, { 0x28,0x00,0x00,0x28 },	/* ...1...0...0...0 */
    		{ 0x80,0x08,0x80,0x08 }, { 0xa0,0x88,0x00,0x28 },	/* ...1...0...0...1 */
    		{ 0x20,0x20,0x80,0x80 }, { 0x08,0x80,0x20,0xa8 },	/* ...1...0...1...0 */
    		{ 0x80,0x08,0x80,0x08 }, { 0x20,0x20,0x80,0x80 },	/* ...1...0...1...1 */
    		{ 0x88,0x88,0x88,0x88 }, { 0x88,0x88,0x88,0x88 },	/* ...1...1...0...0 */
    		{ 0x80,0x08,0x80,0x08 }, { 0x08,0x80,0x20,0xa8 },	/* ...1...1...0...1 */
    		{ 0x80,0x08,0x80,0x08 }, { 0x28,0x00,0x00,0x28 },	/* ...1...1...1...0 */
    		{ 0x20,0x20,0x80,0x80 }, { 0xa0,0x88,0x00,0x28 }	/* ...1...1...1...1 */
    	};
    
    
    	sega_decode(xortable);
    }
    
    /*TODO*///
    /*TODO*///void bullfgtj_decode(void)
    /*TODO*///{
    /*TODO*///	static const unsigned char xortable[32][4] =
    /*TODO*///	{
    /*TODO*///		/*       opcode                   data                     address      */
    /*TODO*///		/*  A    B    C    D         A    B    C    D                           */
    /*TODO*///		{ 0xa0,0xa0,0x00,0x00 }, { 0x80,0xa8,0x20,0x08 },	/* ...0...0...0...0 */
    /*TODO*///		{ 0x20,0x20,0x20,0x20 }, { 0x20,0x20,0x20,0x20 },	/* ...0...0...0...1 */
    /*TODO*///		{ 0xa0,0xa0,0x00,0x00 }, { 0x08,0x20,0x20,0x08 },	/* ...0...0...1...0 */
    /*TODO*///		{ 0x88,0x00,0x88,0x00 }, { 0x88,0x00,0x88,0x00 },	/* ...0...0...1...1 */
    /*TODO*///		{ 0xa0,0xa0,0x00,0x00 }, { 0x20,0x20,0x20,0x20 },	/* ...0...1...0...0 */
    /*TODO*///		{ 0x28,0xa0,0x00,0x88 }, { 0x20,0x20,0x20,0x20 },	/* ...0...1...0...1 */
    /*TODO*///		{ 0xa0,0xa0,0x00,0x00 }, { 0x08,0x20,0x20,0x08 },	/* ...0...1...1...0 */
    /*TODO*///		{ 0x88,0x00,0x88,0x00 }, { 0x88,0x00,0x88,0x00 },	/* ...0...1...1...1 */
    /*TODO*///		{ 0x28,0xa0,0x00,0x88 }, { 0xa0,0xa0,0x00,0x00 },	/* ...1...0...0...0 */
    /*TODO*///		{ 0x88,0x00,0x88,0x00 }, { 0x80,0xa8,0x20,0x08 },	/* ...1...0...0...1 */
    /*TODO*///		{ 0x28,0xa0,0x00,0x88 }, { 0x08,0x20,0x20,0x08 },	/* ...1...0...1...0 */
    /*TODO*///		{ 0x28,0xa0,0x00,0x88 }, { 0x80,0xa8,0x20,0x08 },	/* ...1...0...1...1 */
    /*TODO*///		{ 0x20,0x20,0x20,0x20 }, { 0x20,0x20,0x20,0x20 },	/* ...1...1...0...0 */
    /*TODO*///		{ 0x88,0x00,0x88,0x00 }, { 0x20,0x20,0x20,0x20 },	/* ...1...1...0...1 */
    /*TODO*///		{ 0x08,0x20,0x20,0x08 }, { 0x80,0xa8,0x20,0x08 },	/* ...1...1...1...0 */
    /*TODO*///		{ 0x08,0x20,0x20,0x08 }, { 0x88,0x00,0x88,0x00 }	/* ...1...1...1...1 */
    /*TODO*///	};
    /*TODO*///
    /*TODO*///
    /*TODO*///	sega_decode(xortable);
    /*TODO*///}
    /*TODO*///
    /*TODO*///
    /*TODO*///void pitfall2_decode(void)
    /*TODO*///{
    /*TODO*///	static const unsigned char xortable[32][4] =
    /*TODO*///	{
    /*TODO*///		/*       opcode                   data                     address      */
    /*TODO*///		/*  A    B    C    D         A    B    C    D                           */
    /*TODO*///		{ 0xa0,0x88,0x88,0xa0 }, { 0xa0,0x88,0x88,0xa0 },	/* ...0...0...0...0 */
    /*TODO*///		{ 0x08,0x80,0x08,0x80 }, { 0x28,0xa0,0x00,0x88 },	/* ...0...0...0...1 */
    /*TODO*///		{ 0xa0,0x88,0x88,0xa0 }, { 0xa0,0x88,0x88,0xa0 },	/* ...0...0...1...0 */
    /*TODO*///		{ 0xa0,0xa0,0x00,0x00 }, { 0xa0,0xa0,0x00,0x00 },	/* ...0...0...1...1 */
    /*TODO*///		{ 0xa0,0x88,0x88,0xa0 }, { 0x20,0x08,0x80,0xa8 },	/* ...0...1...0...0 */
    /*TODO*///		{ 0x28,0xa0,0x00,0x88 }, { 0x20,0x08,0x80,0xa8 },	/* ...0...1...0...1 */
    /*TODO*///		{ 0xa0,0xa0,0x00,0x00 }, { 0xa0,0xa0,0x00,0x00 },	/* ...0...1...1...0 */
    /*TODO*///		{ 0x28,0xa0,0x00,0x88 }, { 0xa0,0xa0,0x00,0x00 },	/* ...0...1...1...1 */
    /*TODO*///		{ 0x20,0x08,0x80,0xa8 }, { 0x80,0x80,0x80,0x80 },	/* ...1...0...0...0 */
    /*TODO*///		{ 0x80,0x80,0x80,0x80 }, { 0x80,0x80,0x80,0x80 },	/* ...1...0...0...1 */
    /*TODO*///		{ 0xa0,0xa0,0x00,0x00 }, { 0xa0,0x88,0x88,0xa0 },	/* ...1...0...1...0 */
    /*TODO*///		{ 0x80,0x80,0x80,0x80 }, { 0x28,0xa0,0x00,0x88 },	/* ...1...0...1...1 */
    /*TODO*///		{ 0x20,0x08,0x80,0xa8 }, { 0x80,0x80,0x80,0x80 },	/* ...1...1...0...0 */
    /*TODO*///		{ 0x80,0x80,0x80,0x80 }, { 0x20,0x08,0x80,0xa8 },	/* ...1...1...0...1 */
    /*TODO*///		{ 0xa0,0xa0,0x00,0x00 }, { 0xa0,0x88,0x88,0xa0 },	/* ...1...1...1...0 */
    /*TODO*///		{ 0x80,0x80,0x80,0x80 }, { 0x28,0xa0,0x00,0x88 }	/* ...1...1...1...1 */
    /*TODO*///	};
    /*TODO*///
    /*TODO*///
    /*TODO*///	sega_decode(xortable);
    /*TODO*///}
    /*TODO*///
    /*TODO*///
    public static void nprinces_decode()
    {
    	char xortable[][] =
    	{
    		/*       opcode                   data                     address      */
    		/*  A    B    C    D         A    B    C    D                           */
    		{ 0x08,0x80,0x20,0xa8 }, { 0xa0,0x28,0xa0,0x28 },	/* ...0...0...0...0 */
    		{ 0xa8,0xa8,0x08,0x08 }, { 0x88,0xa0,0xa0,0x88 },	/* ...0...0...0...1 */
    		{ 0x88,0x88,0x28,0x28 }, { 0x28,0x00,0x88,0xa0 },	/* ...0...0...1...0 */
    		{ 0x88,0xa0,0xa0,0x88 }, { 0x28,0x00,0x88,0xa0 },	/* ...0...0...1...1 */
    		{ 0x88,0xa0,0xa0,0x88 }, { 0xa0,0x28,0xa0,0x28 },	/* ...0...1...0...0 */
    		{ 0xa8,0xa8,0x08,0x08 }, { 0xa8,0xa8,0x08,0x08 },	/* ...0...1...0...1 */
    		{ 0x88,0x88,0x28,0x28 }, { 0x88,0xa0,0xa0,0x88 },	/* ...0...1...1...0 */
    		{ 0x88,0xa0,0xa0,0x88 }, { 0x88,0xa0,0xa0,0x88 },	/* ...0...1...1...1 */
    		{ 0xa0,0x28,0xa0,0x28 }, { 0xa0,0x28,0xa0,0x28 },	/* ...1...0...0...0 */
    		{ 0x08,0x80,0x20,0xa8 }, { 0x28,0x00,0x88,0xa0 },	/* ...1...0...0...1 */
    		{ 0x88,0xa0,0xa0,0x88 }, { 0x88,0x88,0x28,0x28 },	/* ...1...0...1...0 */
    		{ 0x88,0xa0,0xa0,0x88 }, { 0x28,0x00,0x88,0xa0 },	/* ...1...0...1...1 */
    		{ 0x88,0xa0,0xa0,0x88 }, { 0x88,0xa0,0xa0,0x88 },	/* ...1...1...0...0 */
    		{ 0x88,0xa0,0xa0,0x88 }, { 0x88,0xa0,0xa0,0x88 },	/* ...1...1...0...1 */
    		{ 0x88,0x88,0x28,0x28 }, { 0x88,0x88,0x28,0x28 },	/* ...1...1...1...0 */
    		{ 0x08,0x80,0x20,0xa8 }, { 0x28,0x00,0x88,0xa0 }	/* ...1...1...1...1 */
    	};
    
    
    	sega_decode(xortable);
    }
    
    /*TODO*///
    /*TODO*///void seganinj_decode(void)
    /*TODO*///{
    /*TODO*///	static const unsigned char xortable[32][4] =
    /*TODO*///	{
    /*TODO*///		/*       opcode                   data                     address      */
    /*TODO*///		/*  A    B    C    D         A    B    C    D                           */
    /*TODO*///		{ 0x88,0xa0,0xa0,0x88 }, { 0x88,0x00,0xa0,0x28 },	/* ...0...0...0...0 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0xa0,0xa0,0xa0,0xa0 },	/* ...0...0...0...1 */
    /*TODO*///		{ 0xa8,0xa8,0x08,0x08 }, { 0xa8,0xa8,0x08,0x08 },	/* ...0...0...1...0 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0xa0,0xa0,0xa0,0xa0 },	/* ...0...0...1...1 */
    /*TODO*///		{ 0x28,0x00,0x88,0xa0 }, { 0x28,0x00,0x88,0xa0 },	/* ...0...1...0...0 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0x88,0x00,0xa0,0x28 },	/* ...0...1...0...1 */
    /*TODO*///		{ 0x28,0x00,0x88,0xa0 }, { 0x28,0x00,0x88,0xa0 },	/* ...0...1...1...0 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0xa8,0xa8,0x08,0x08 },	/* ...0...1...1...1 */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0x88,0xa0,0xa0,0x88 },	/* ...1...0...0...0 */
    /*TODO*///		{ 0xa0,0xa0,0xa0,0xa0 }, { 0x28,0xa0,0x28,0xa0 },	/* ...1...0...0...1 */
    /*TODO*///		{ 0xa8,0xa8,0x08,0x08 }, { 0x88,0xa0,0xa0,0x88 },	/* ...1...0...1...0 */
    /*TODO*///		{ 0xa8,0xa8,0x08,0x08 }, { 0x28,0xa0,0x28,0xa0 },	/* ...1...0...1...1 */
    /*TODO*///		{ 0x28,0x00,0x88,0xa0 }, { 0x88,0xa0,0xa0,0x88 },	/* ...1...1...0...0 */
    /*TODO*///		{ 0x28,0x00,0x88,0xa0 }, { 0x28,0x00,0x88,0xa0 },	/* ...1...1...0...1 */
    /*TODO*///		{ 0x88,0xa0,0xa0,0x88 }, { 0x88,0xa0,0xa0,0x88 },	/* ...1...1...1...0 */
    /*TODO*///		{ 0xa8,0xa8,0x08,0x08 }, { 0x28,0x00,0x88,0xa0 }	/* ...1...1...1...1 */
    /*TODO*///	};
    /*TODO*///
    /*TODO*///
    /*TODO*///	sega_decode(xortable);
    /*TODO*///}
    /*TODO*///
    /*TODO*///
    /*TODO*///void imsorry_decode(void)
    /*TODO*///{
    /*TODO*///	static const unsigned char xortable[32][4] =
    /*TODO*///	{
    /*TODO*///		/*       opcode                   data                     address      */
    /*TODO*///		/*  A    B    C    D         A    B    C    D                           */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0x00,0x28,0xa0,0x88 },	/* ...0...0...0...0 */
    /*TODO*///		{ 0x00,0x28,0xa0,0x88 }, { 0x88,0x00,0xa0,0x28 },	/* ...0...0...0...1 */
    /*TODO*///		{ 0x88,0x00,0x88,0x00 }, { 0x00,0x28,0xa0,0x88 },	/* ...0...0...1...0 */
    /*TODO*///		{ 0x00,0x28,0xa0,0x88 }, { 0x88,0x00,0x88,0x00 },	/* ...0...0...1...1 */
    /*TODO*///		{ 0x00,0x28,0xa0,0x88 }, { 0x08,0x08,0xa8,0xa8 },	/* ...0...1...0...0 */
    /*TODO*///		{ 0x00,0x28,0xa0,0x88 }, { 0x20,0x20,0x80,0x80 },	/* ...0...1...0...1 */
    /*TODO*///		{ 0x20,0x20,0x80,0x80 }, { 0x00,0x28,0xa0,0x88 },	/* ...0...1...1...0 */
    /*TODO*///		{ 0x20,0x20,0x80,0x80 }, { 0x88,0x00,0x88,0x00 },	/* ...0...1...1...1 */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0x08,0x08,0xa8,0xa8 },	/* ...1...0...0...0 */
    /*TODO*///		{ 0x08,0x08,0xa8,0xa8 }, { 0x88,0x00,0xa0,0x28 },	/* ...1...0...0...1 */
    /*TODO*///		{ 0x08,0x20,0x20,0x08 }, { 0x08,0x20,0x20,0x08 },	/* ...1...0...1...0 */
    /*TODO*///		{ 0x88,0x00,0xa0,0x28 }, { 0x08,0x20,0x20,0x08 },	/* ...1...0...1...1 */
    /*TODO*///		{ 0x08,0x20,0x20,0x08 }, { 0x08,0x08,0xa8,0xa8 },	/* ...1...1...0...0 */
    /*TODO*///		{ 0x08,0x20,0x20,0x08 }, { 0x20,0x20,0x80,0x80 },	/* ...1...1...0...1 */
    /*TODO*///		{ 0x20,0x20,0x80,0x80 }, { 0x08,0x20,0x20,0x08 },	/* ...1...1...1...0 */
    /*TODO*///		{ 0x20,0x20,0x80,0x80 }, { 0x08,0x20,0x20,0x08 }	/* ...1...1...1...1 */
    /*TODO*///	};
    /*TODO*///
    /*TODO*///
    /*TODO*///	sega_decode(xortable);
    /*TODO*///}
    /*TODO*///
    /*TODO*///
    /*TODO*///void teddybb_decode(void)
    /*TODO*///{
    /*TODO*///	static const unsigned char xortable[32][4] =
    /*TODO*///	{
    /*TODO*///		/*       opcode                   data                     address      */
    /*TODO*///		/*  A    B    C    D         A    B    C    D                           */
    /*TODO*///		{ 0x20,0x20,0x20,0x20 }, { 0x80,0x08,0x80,0x08 },	/* ...0...0...0...0 */
    /*TODO*///		{ 0x20,0x20,0x20,0x20 }, { 0xa0,0xa0,0x00,0x00 },	/* ...0...0...0...1 */
    /*TODO*///		{ 0x28,0x00,0x88,0xa0 }, { 0xa0,0x88,0x88,0xa0 },	/* ...0...0...1...0 */
    /*TODO*///		{ 0xa0,0xa0,0x00,0x00 }, { 0xa0,0x88,0x88,0xa0 },	/* ...0...0...1...1 */
    /*TODO*///		{ 0x20,0x20,0x20,0x20 }, { 0x28,0x00,0x88,0xa0 },	/* ...0...1...0...0 */
    /*TODO*///		{ 0xa0,0xa0,0x00,0x00 }, { 0xa0,0xa0,0x00,0x00 },	/* ...0...1...0...1 */
    /*TODO*///		{ 0xa0,0x88,0x88,0xa0 }, { 0x28,0x00,0x88,0xa0 },	/* ...0...1...1...0 */
    /*TODO*///		{ 0xa0,0xa0,0x00,0x00 }, { 0x28,0x00,0x88,0xa0 },	/* ...0...1...1...1 */
    /*TODO*///		{ 0x80,0x08,0x80,0x08 }, { 0x80,0x08,0x80,0x08 },	/* ...1...0...0...0 */
    /*TODO*///		{ 0xa0,0x28,0x88,0x00 }, { 0xa0,0xa0,0x00,0x00 },	/* ...1...0...0...1 */
    /*TODO*///		{ 0xa0,0x28,0x88,0x00 }, { 0xa0,0x88,0x88,0xa0 },	/* ...1...0...1...0 */
    /*TODO*///		{ 0xa0,0x88,0x88,0xa0 }, { 0xa0,0x88,0x88,0xa0 },	/* ...1...0...1...1 */
    /*TODO*///		{ 0x80,0x08,0x80,0x08 }, { 0x20,0x20,0x20,0x20 },	/* ...1...1...0...0 */
    /*TODO*///		{ 0xa0,0xa0,0x00,0x00 }, { 0xa0,0x28,0x88,0x00 },	/* ...1...1...0...1 */
    /*TODO*///		{ 0x80,0x08,0x80,0x08 }, { 0xa0,0x88,0x88,0xa0 },	/* ...1...1...1...0 */
    /*TODO*///		{ 0xa0,0xa0,0x00,0x00 }, { 0xa0,0x28,0x88,0x00 }	/* ...1...1...1...1 */
    /*TODO*///	};
    /*TODO*///
    /*TODO*///
    /*TODO*///	sega_decode(xortable);
    /*TODO*///}
    /*TODO*///
    /*TODO*///
    /*TODO*///void hvymetal_decode(void)
    /*TODO*///{
    /*TODO*///	static const unsigned char xortable[32][4] =
    /*TODO*///	{
    /*TODO*///		/*       opcode                   data                     address      */
    /*TODO*///		/*  A    B    C    D         A    B    C    D                           */
    /*TODO*///		{ 0x88,0xa0,0xa0,0x88 }, { 0xa0,0x88,0x88,0xa0 },	/* ...0...0...0...0 */
    /*TODO*///		{ 0x88,0xa0,0xa0,0x88 }, { 0x88,0x88,0x28,0x28 },	/* ...0...0...0...1 */
    /*TODO*///		{ 0xa0,0x88,0x88,0xa0 }, { 0x88,0xa0,0xa0,0x88 },	/* ...0...0...1...0 */
    /*TODO*///		{ 0x88,0xa0,0xa0,0x88 }, { 0x88,0x88,0x28,0x28 },	/* ...0...0...1...1 */
    /*TODO*///		{ 0xa0,0x88,0x88,0xa0 }, { 0x88,0x88,0x28,0x28 },	/* ...0...1...0...0 */
    /*TODO*///		{ 0x88,0x88,0x28,0x28 }, { 0x88,0x88,0x28,0x28 },	/* ...0...1...0...1 */
    /*TODO*///		{ 0xa0,0x88,0x88,0xa0 }, { 0x88,0x88,0x28,0x28 },	/* ...0...1...1...0 */
    /*TODO*///		{ 0x88,0x88,0x28,0x28 }, { 0x28,0x00,0x88,0xa0 },	/* ...0...1...1...1 */
    /*TODO*///		{ 0xa0,0x28,0x88,0x00 }, { 0x88,0xa0,0xa0,0x88 },	/* ...1...0...0...0 */
    /*TODO*///		{ 0xa0,0x28,0x88,0x00 }, { 0x88,0xa0,0xa0,0x88 },	/* ...1...0...0...1 */
    /*TODO*///		{ 0xa0,0x28,0x88,0x00 }, { 0x88,0xa0,0xa0,0x88 },	/* ...1...0...1...0 */
    /*TODO*///		{ 0x88,0xa0,0xa0,0x88 }, { 0x28,0x00,0x88,0xa0 },	/* ...1...0...1...1 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0xa0,0x28,0x88,0x00 },	/* ...1...1...0...0 */
    /*TODO*///		{ 0xa0,0x28,0x88,0x00 }, { 0x28,0xa0,0x28,0xa0 },	/* ...1...1...0...1 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0xa0,0x28,0x88,0x00 },	/* ...1...1...1...0 */
    /*TODO*///		{ 0x28,0x00,0x88,0xa0 }, { 0x28,0xa0,0x28,0xa0 }	/* ...1...1...1...1 */
    /*TODO*///	};
    /*TODO*///
    /*TODO*///
    /*TODO*///	sega_decode(xortable);
    /*TODO*///}
    /*TODO*///
    /*TODO*///
    /*TODO*///void myheroj_decode(void)
    /*TODO*///{
    /*TODO*///	static const unsigned char xortable[32][4] =
    /*TODO*///	{
    /*TODO*///		/*       opcode                   data                     address      */
    /*TODO*///		/*  A    B    C    D         A    B    C    D                           */
    /*TODO*///		{ 0x20,0x08,0x80,0xa8 }, { 0x80,0xa8,0xa8,0x80 },	/* ...0...0...0...0 */
    /*TODO*///		{ 0x20,0x08,0x80,0xa8 }, { 0x80,0xa8,0xa8,0x80 },	/* ...0...0...0...1 */
    /*TODO*///		{ 0xa8,0xa8,0xa8,0xa8 }, { 0xa8,0xa8,0xa8,0xa8 },	/* ...0...0...1...0 */
    /*TODO*///		{ 0x08,0x80,0x20,0xa8 }, { 0x80,0xa8,0xa8,0x80 },	/* ...0...0...1...1 */
    /*TODO*///		{ 0x20,0x08,0x80,0xa8 }, { 0x28,0xa0,0x28,0xa0 },	/* ...0...1...0...0 */
    /*TODO*///		{ 0x20,0x08,0x80,0xa8 }, { 0x08,0x80,0x20,0xa8 },	/* ...0...1...0...1 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0xa8,0xa8,0xa8,0xa8 },	/* ...0...1...1...0 */
    /*TODO*///		{ 0x08,0x80,0x20,0xa8 }, { 0xa8,0xa8,0xa8,0xa8 },	/* ...0...1...1...1 */
    /*TODO*///		{ 0x28,0xa0,0x28,0xa0 }, { 0x20,0x08,0x80,0xa8 },	/* ...1...0...0...0 */
    /*TODO*///		{ 0x80,0xa8,0xa8,0x80 }, { 0x20,0x08,0x80,0xa8 },	/* ...1...0...0...1 */
    /*TODO*///		{ 0x80,0xa8,0xa8,0x80 }, { 0x80,0xa8,0xa8,0x80 },	/* ...1...0...1...0 */
    /*TODO*///		{ 0xa8,0xa8,0xa8,0xa8 }, { 0x80,0xa8,0xa8,0x80 },	/* ...1...0...1...1 */
    /*TODO*///		{ 0x88,0x88,0x28,0x28 }, { 0x88,0x88,0x28,0x28 },	/* ...1...1...0...0 */
    /*TODO*///		{ 0x88,0x88,0x28,0x28 }, { 0x08,0x80,0x20,0xa8 },	/* ...1...1...0...1 */
    /*TODO*///		{ 0x88,0x88,0x28,0x28 }, { 0xa8,0xa8,0xa8,0xa8 },	/* ...1...1...1...0 */
    /*TODO*///		{ 0x88,0x88,0x28,0x28 }, { 0xa8,0xa8,0xa8,0xa8 }	/* ...1...1...1...1 */
    /*TODO*///	};
    /*TODO*///
    /*TODO*///
    /*TODO*///	sega_decode(xortable);
    /*TODO*///}
    /*TODO*///
    /*TODO*///
    /*TODO*////******************************************************************************
    /*TODO*///
    /*TODO*///  4D Warriors
    /*TODO*///
    /*TODO*///  This encryption is quite different from the standard one. It is still
    /*TODO*///  a XOR scheme, but the value to use for the XOR is chosen differently, and
    /*TODO*///  the affected bits are D0, D2, D4 and D6 instead of D3, D5 and D7.
    /*TODO*///
    /*TODO*///  The translation table depends on A0, A3, A6, A9, A12 and A14; however A0, A3
    /*TODO*///  and A6 only select some fixed additional XOR, so there are only 8 really
    /*TODO*///  different tables.
    /*TODO*///
    /*TODO*///  There are no separate tables for data and opcodes: the opcodes are just XORed
    /*TODO*///  with an additional 0x40. To make it a little more complicated, however, data
    /*TODO*///  picks its XOR value not from the line given by the address but from the one
    /*TODO*///  below. For example if you are decoding a byte at address .1.0..1..0..1..0,
    /*TODO*///  you pick the XOR value as if you were at address .1.0..1..0..1..1 (note that
    /*TODO*///  I'm not talking about the rows of the xortable below, but of the "logical"
    /*TODO*///  ones which are generated by them with the additional fixed XORs selected by
    /*TODO*///  A0, A3 and A6).
    /*TODO*///
    /*TODO*///******************************************************************************/
    /*TODO*///
    /*TODO*///void fdwarrio_decode(void)
    /*TODO*///{
    /*TODO*///	static const unsigned char xortable[8+1][8] =
    /*TODO*///	{
    /*TODO*///		/* note how the first lines are highly repetitive, while the */
    /*TODO*///		/* last ones get more and more unique. */
    /*TODO*///		{ 0x00,0x00,0x14,0x14,0x14,0x14,0x00,0x00 },	/* .0.0..0..x..x..x */
    /*TODO*///		{ 0x00,0x11,0x00,0x11,0x11,0x00,0x11,0x00 },	/* .0.0..1..x..x..x */
    /*TODO*///		{ 0x00,0x05,0x05,0x00,0x00,0x05,0x05,0x00 },	/* .0.1..0..x..x..x */
    /*TODO*///		{ 0x00,0x00,0x44,0x44,0x14,0x14,0x50,0x50 },	/* .0.1..1..x..x..x */
    /*TODO*///		{ 0x00,0x00,0x14,0x14,0x50,0x50,0x44,0x44 },	/* .1.0..0..x..x..x */
    /*TODO*///		{ 0x00,0x05,0x05,0x00,0x50,0x55,0x55,0x50 },	/* .1.0..1..x..x..x */
    /*TODO*///		{ 0x00,0x11,0x05,0x14,0x14,0x05,0x11,0x00 },	/* .1.1..0..x..x..x */
    /*TODO*///		{ 0x00,0x41,0x05,0x44,0x14,0x55,0x11,0x50 },	/* .1.1..1..x..x..x */
    /*TODO*///		{ 0x00,0x11,0x05,0x14,0x50,0x41,0x55,0x44 }		/* extra line for data decode */
    /*TODO*///	};
    /*TODO*///	int A;
    /*TODO*///	unsigned char *rom = memory_region(REGION_CPU1);
    /*TODO*///	int diff = memory_region_length(REGION_CPU1) / 2;
    /*TODO*///
    /*TODO*///
    /*TODO*///	memory_set_opcode_base(0,rom+diff);
    /*TODO*///
    /*TODO*///	for (A = 0x0000;A < 0x8000;A++)
    /*TODO*///	{
    /*TODO*///		int row,col;
    /*TODO*///		unsigned char src;
    /*TODO*///
    /*TODO*///
    /*TODO*///		src = rom[A];
    /*TODO*///
    /*TODO*///		/* pick the translation table from bits 0, 3, 6, 9, 12 and 14 of the address */
    /*TODO*///		row = (A & 1) + (((A >> 3) & 1) << 1) + (((A >> 6) & 1) << 2)
    /*TODO*///				+ (((A >> 9) & 1) << 3) + (((A >> 12) & 1) << 4) + (((A >> 14) & 1) << 5);
    /*TODO*///
    /*TODO*///		/* pick the offset in the table from bits 0, 2, 4 and 6 of the source data */
    /*TODO*///		col = ((src >> 0) & 1) + (((src >> 2) & 1) << 1) + (((src >> 4) & 1) << 2);
    /*TODO*///		/* the bottom half of the translation table is the mirror image of the top */
    /*TODO*///		if (src & 0x40) col = 7 - col;
    /*TODO*///
    /*TODO*///		/* decode the opcodes */
    /*TODO*///		rom[A + diff] = src ^ xortable[row >> 3][col] ^ 0x40;
    /*TODO*///		if (row & 1) rom[A + diff] ^= 0x10;
    /*TODO*///		if (row & 2) rom[A + diff] ^= 0x04;
    /*TODO*///		if (row & 4) rom[A + diff] ^= 0x01;
    /*TODO*///
    /*TODO*///		/* decode the data */
    /*TODO*///		row++;	/* the data XOR table is shifted by one position!!!! */
    /*TODO*///		rom[A] = src ^ xortable[row >> 3][col];
    /*TODO*///		if (row & 1) rom[A] ^= 0x10;
    /*TODO*///		if (row & 2) rom[A] ^= 0x04;
    /*TODO*///		if (row & 4) rom[A] ^= 0x01;
    /*TODO*///	}
    /*TODO*///
    /*TODO*///	/* copy the opcodes from the not encrypted part of the ROMs */
    /*TODO*///	for (A = 0x8000;A < diff;A++)
    /*TODO*///		rom[A + diff] = rom[A];
    /*TODO*///}
    /*TODO*///
    /*TODO*///
    /*TODO*///
    /*TODO*////******************************************************************************
    /*TODO*///
    /*TODO*///  Wonder Boy
    /*TODO*///
    /*TODO*///  This is different again. It is similar to 4D Warriors - it affects the same
    /*TODO*///  data bits and is selected by the same address lines, but I haven't been able
    /*TODO*///  to find any regularities in the XOR table, so I'm using a huge 1024 bytes
    /*TODO*///  array.
    /*TODO*///
    /*TODO*///******************************************************************************/
    /*TODO*///
    /*TODO*///void wboy3_decode(void)
    /*TODO*///{
    /*TODO*///	/* not decoded yet! */
    /*TODO*///}
    /*TODO*///
    /*TODO*///
    /*TODO*///void wboy4_decode(void)
    /*TODO*///{
    /*TODO*///	static const unsigned char opcode_xortable[8*8][8] =
    /*TODO*///	{
    /*TODO*///		{ 0x00,0x00,0x44,0x44,0x00,0x00,0x44,0x44 },	/* .0.0 ..0. .0.. 0..0 */
    /*TODO*///		{ 0x45,0x54,0x45,0x54,0x54,0x45,0x54,0x45 },	/* .0.0 ..0. .0.. 0..1 */
    /*TODO*///		{ 0x11,0x11,0x11,0x11,0x41,0x41,0x41,0x41 },	/* .0.0 ..0. .0.. 1..0 */
    /*TODO*///		{ 0x01,0x10,0x01,0x10,0x10,0x01,0x10,0x01 },	/* .0.0 ..0. .0.. 1..1 */
    /*TODO*///		{ 0x44,0x44,0x44,0x44,0x14,0x14,0x14,0x14 },	/* .0.0 ..0. .1.. 0..0 */
    /*TODO*///		{ 0x10,0x01,0x10,0x01,0x01,0x10,0x01,0x10 },	/* .0.0 ..0. .1.. 0..1 */
    /*TODO*///		{ 0x55,0x55,0x55,0x55,0x55,0x55,0x55,0x55 },	/* .0.0 ..0. .1.. 1..0 */
    /*TODO*///		{ 0x05,0x05,0x11,0x11,0x11,0x11,0x05,0x05 },	/* .0.0 ..0. .1.. 1..1 */
    /*TODO*///		{ 0x41,0x41,0x41,0x41,0x41,0x41,0x41,0x41 },	/* .0.0 ..1. .0.. 0..0 */
    /*TODO*///		{ 0x14,0x14,0x00,0x00,0x00,0x00,0x14,0x14 },	/* .0.0 ..1. .0.. 0..1 */
    /*TODO*///		{ 0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04 },	/* .0.0 ..1. .0.. 1..0 */
    /*TODO*///		{ 0x40,0x40,0x54,0x54,0x54,0x54,0x40,0x40 },	/* .0.0 ..1. .0.. 1..1 */
    /*TODO*///		{ 0x15,0x15,0x51,0x51,0x01,0x01,0x45,0x45 },	/* .0.0 ..1. .1.. 0..0 */
    /*TODO*///		{ 0x51,0x10,0x51,0x10,0x51,0x10,0x51,0x10 },	/* .0.0 ..1. .1.. 0..1 */
    /*TODO*///		{ 0x01,0x01,0x45,0x45,0x15,0x15,0x51,0x51 },	/* .0.0 ..1. .1.. 1..0 */
    /*TODO*///		{ 0x44,0x05,0x44,0x05,0x44,0x05,0x44,0x05 },	/* .0.0 ..1. .1.. 1..1 */
    /*TODO*///		{ 0x10,0x10,0x54,0x54,0x04,0x04,0x40,0x40 },	/* .0.1 ..0. .0.. 0..0 */
    /*TODO*///		{ 0x00,0x41,0x00,0x41,0x00,0x41,0x00,0x41 },	/* .0.1 ..0. .0.. 0..1 */
    /*TODO*///		{ 0x45,0x40,0x40,0x45,0x45,0x40,0x40,0x45 },	/* .0.1 ..0. .0.. 1..0 */
    /*TODO*///		{ 0x11,0x11,0x55,0x55,0x11,0x11,0x55,0x55 },	/* .0.1 ..0. .0.. 1..1 */
    /*TODO*///		{ 0x54,0x51,0x51,0x54,0x54,0x51,0x51,0x54 },	/* .0.1 ..0. .1.. 0..0 */
    /*TODO*///		{ 0x04,0x04,0x40,0x40,0x04,0x04,0x40,0x40 },	/* .0.1 ..0. .1.. 0..1 */
    /*TODO*///		{ 0x40,0x45,0x45,0x40,0x40,0x45,0x45,0x40 },	/* .0.1 ..0. .1.. 1..0 */
    /*TODO*///		{ 0x15,0x15,0x15,0x15,0x45,0x45,0x45,0x45 },	/* .0.1 ..0. .1.. 1..1 */
    /*TODO*///		{ 0x05,0x14,0x05,0x14,0x14,0x05,0x14,0x05 },	/* .0.1 ..1. .0.. 0..0 */
    /*TODO*///		{ 0x41,0x41,0x41,0x41,0x11,0x11,0x11,0x11 },	/* .0.1 ..1. .0.. 0..1 */
    /*TODO*///		{ 0x14,0x05,0x14,0x05,0x05,0x14,0x05,0x14 },	/* .0.1 ..1. .0.. 1..0 */
    /*TODO*///		{ 0x50,0x50,0x50,0x50,0x00,0x00,0x00,0x00 },	/* .0.1 ..1. .0.. 1..1 */
    /*TODO*///		{ 0x00,0x11,0x00,0x11,0x11,0x00,0x11,0x00 },	/* .0.1 ..1. .1.. 0..0 */
    /*TODO*///		{ 0x45,0x45,0x45,0x45,0x45,0x45,0x45,0x45 },	/* .0.1 ..1. .1.. 0..1 */
    /*TODO*///		{ 0x11,0x11,0x05,0x05,0x05,0x05,0x11,0x11 },	/* .0.1 ..1. .1.. 1..0 */
    /*TODO*///		{ 0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01 },	/* .0.1 ..1. .1.. 1..1 */
    /*TODO*///		{ 0x00,0x11,0x05,0x14,0x14,0x05,0x11,0x00 },	/* .1.0 ..0. .0.. 0..0 */
    /*TODO*///		{ 0x45,0x04,0x40,0x01,0x45,0x04,0x40,0x01 },	/* .1.0 ..0. .0.. 0..1 */
    /*TODO*///		{ 0x11,0x14,0x14,0x11,0x41,0x44,0x44,0x41 },	/* .1.0 ..0. .0.. 1..0 */
    /*TODO*///		{ 0x01,0x40,0x04,0x45,0x01,0x40,0x04,0x45 },	/* .1.0 ..0. .0.. 1..1 */
    /*TODO*///		{ 0x44,0x41,0x41,0x44,0x14,0x11,0x11,0x14 },	/* .1.0 ..0. .1.. 0..0 */
    /*TODO*///		{ 0x10,0x51,0x15,0x54,0x10,0x51,0x15,0x54 },	/* .1.0 ..0. .1.. 0..1 */
    /*TODO*///		{ 0x55,0x55,0x41,0x41,0x05,0x05,0x11,0x11 },	/* .1.0 ..0. .1.. 1..0 */
    /*TODO*///		{ 0x05,0x14,0x00,0x11,0x55,0x44,0x50,0x41 },	/* .1.0 ..0. .1.. 1..1 */
    /*TODO*///		{ 0x41,0x41,0x55,0x55,0x11,0x11,0x05,0x05 },	/* .1.0 ..1. .0.. 0..0 */
    /*TODO*///		{ 0x14,0x05,0x11,0x00,0x44,0x55,0x41,0x50 },	/* .1.0 ..1. .0.. 0..1 */
    /*TODO*///		{ 0x04,0x04,0x10,0x10,0x54,0x54,0x40,0x40 },	/* .1.0 ..1. .0.. 1..0 */
    /*TODO*///		{ 0x40,0x51,0x45,0x54,0x10,0x01,0x15,0x04 },	/* .1.0 ..1. .0.. 1..1 */
    /*TODO*///		{ 0x15,0x10,0x51,0x54,0x04,0x01,0x40,0x45 },	/* .1.0 ..1. .1.. 0..0 */
    /*TODO*///		{ 0x51,0x10,0x54,0x15,0x45,0x04,0x40,0x01 },	/* .1.0 ..1. .1.. 0..1 */
    /*TODO*///		{ 0x01,0x04,0x45,0x40,0x10,0x15,0x54,0x51 },	/* .1.0 ..1. .1.. 1..0 */
    /*TODO*///		{ 0x44,0x05,0x41,0x00,0x50,0x11,0x55,0x14 },	/* .1.0 ..1. .1.. 1..1 */
    /*TODO*///		/* the following are all FF because there is no code to decode */
    /*TODO*///		{ 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff },	/* .1.1 ..0. .0.. 0..0 */
    /*TODO*///		{ 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff },	/* .1.1 ..0. .0.. 0..1 */
    /*TODO*///		{ 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff },	/* .1.1 ..0. .0.. 1..0 */
    /*TODO*///		{ 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff },	/* .1.1 ..0. .0.. 1..1 */
    /*TODO*///		{ 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff },	/* .1.1 ..0. .1.. 0..0 */
    /*TODO*///		{ 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff },	/* .1.1 ..0. .1.. 0..1 */
    /*TODO*///		{ 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff },	/* .1.1 ..0. .1.. 1..0 */
    /*TODO*///		{ 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff },	/* .1.1 ..0. .1.. 1..1 */
    /*TODO*///		{ 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff },	/* .1.1 ..1. .0.. 0..0 */
    /*TODO*///		{ 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff },	/* .1.1 ..1. .0.. 0..1 */
    /*TODO*///		{ 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff },	/* .1.1 ..1. .0.. 1..0 */
    /*TODO*///		{ 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff },	/* .1.1 ..1. .0.. 1..1 */
    /*TODO*///		{ 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff },	/* .1.1 ..1. .1.. 0..0 */
    /*TODO*///		{ 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff },	/* .1.1 ..1. .1.. 0..1 */
    /*TODO*///		{ 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff },	/* .1.1 ..1. .1.. 1..0 */
    /*TODO*///		{ 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff },	/* .1.1 ..1. .1.. 1..1 */
    /*TODO*///	};
    /*TODO*///	static const unsigned char data_xortable[8*8][8] =
    /*TODO*///	{
    /*TODO*///		{ 0x55,0x14,0x55,0x14,0x55,0x14,0x55,0x14 },	/* .0.0 ..0. .0.. 0..0 */
    /*TODO*///		{ 0x05,0x05,0x41,0x41,0x11,0x11,0x55,0x55 },	/* .0.0 ..0. .0.. 0..1 */
    /*TODO*///		{ 0x41,0x00,0x41,0x00,0x41,0x00,0x41,0x00 },	/* .0.0 ..0. .0.. 1..0 */
    /*TODO*///		{ 0x14,0x14,0x50,0x50,0x00,0x00,0x44,0x44 },	/* .0.0 ..0. .0.. 1..1 */
    /*TODO*///		{ 0x50,0x11,0x50,0x11,0x50,0x11,0x50,0x11 },	/* .0.0 ..0. .1.. 0..0 */
    /*TODO*///		{ 0x00,0x00,0x44,0x44,0x14,0x14,0x50,0x50 },	/* .0.0 ..0. .1.. 0..1 */
    /*TODO*///		{ 0x15,0x15,0x51,0x51,0x15,0x15,0x51,0x51 },	/* .0.0 ..0. .1.. 1..0 */
    /*TODO*///		{ 0x51,0x54,0x54,0x51,0x51,0x54,0x54,0x51 },	/* .0.0 ..0. .1.. 1..1 */
    /*TODO*///		{ 0x01,0x01,0x45,0x45,0x01,0x01,0x45,0x45 },	/* .0.0 ..1. .0.. 0..0 */
    /*TODO*///		{ 0x44,0x41,0x41,0x44,0x44,0x41,0x41,0x44 },	/* .0.0 ..1. .0.. 0..1 */
    /*TODO*///		{ 0x10,0x10,0x54,0x54,0x10,0x10,0x54,0x54 },	/* .0.0 ..1. .0.. 1..0 */
    /*TODO*///		{ 0x55,0x44,0x55,0x44,0x44,0x55,0x44,0x55 },	/* .0.0 ..1. .0.. 1..1 */
    /*TODO*///		{ 0x05,0x05,0x05,0x05,0x55,0x55,0x55,0x55 },	/* .0.0 ..1. .1.. 0..0 */
    /*TODO*///		{ 0x11,0x00,0x11,0x00,0x00,0x11,0x00,0x11 },	/* .0.0 ..1. .1.. 0..1 */
    /*TODO*///		{ 0x54,0x54,0x54,0x54,0x04,0x04,0x04,0x04 },	/* .0.0 ..1. .1.. 1..0 */
    /*TODO*///		{ 0x04,0x15,0x04,0x15,0x15,0x04,0x15,0x04 },	/* .0.0 ..1. .1.. 1..1 */
    /*TODO*///		{ 0x40,0x40,0x40,0x40,0x10,0x10,0x10,0x10 },	/* .0.1 ..0. .0.. 0..0 */
    /*TODO*///		{ 0x15,0x15,0x01,0x01,0x01,0x01,0x15,0x15 },	/* .0.1 ..0. .0.. 0..1 */
    /*TODO*///		{ 0x51,0x51,0x51,0x51,0x51,0x51,0x51,0x51 },	/* .0.1 ..0. .0.. 1..0 */
    /*TODO*///		{ 0x01,0x01,0x15,0x15,0x15,0x15,0x01,0x01 },	/* .0.1 ..0. .0.. 1..1 */
    /*TODO*///		{ 0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14 },	/* .0.1 ..0. .1.. 0..0 */
    /*TODO*///		{ 0x50,0x50,0x44,0x44,0x44,0x44,0x50,0x50 },	/* .0.1 ..0. .1.. 0..1 */
    /*TODO*///		{ 0x00,0x00,0x14,0x14,0x50,0x50,0x44,0x44 },	/* .0.1 ..0. .1.. 1..0 */
    /*TODO*///		{ 0x45,0x04,0x45,0x04,0x45,0x04,0x45,0x04 },	/* .0.1 ..0. .1.. 1..1 */
    /*TODO*///		{ 0x11,0x11,0x55,0x55,0x05,0x05,0x41,0x41 },	/* .0.1 ..1. .0.. 0..0 */
    /*TODO*///		{ 0x54,0x15,0x54,0x15,0x54,0x15,0x54,0x15 },	/* .0.1 ..1. .0.. 0..1 */
    /*TODO*///		{ 0x04,0x04,0x40,0x40,0x10,0x10,0x54,0x54 },	/* .0.1 ..1. .0.. 1..0 */
    /*TODO*///		{ 0x10,0x51,0x10,0x51,0x10,0x51,0x10,0x51 },	/* .0.1 ..1. .0.. 1..1 */
    /*TODO*///		{ 0x55,0x50,0x50,0x55,0x55,0x50,0x50,0x55 },	/* .0.1 ..1. .1.. 0..0 */
    /*TODO*///		{ 0x05,0x05,0x41,0x41,0x05,0x05,0x41,0x41 },	/* .0.1 ..1. .1.. 0..1 */
    /*TODO*///		{ 0x41,0x44,0x44,0x41,0x41,0x44,0x44,0x41 },	/* .0.1 ..1. .1.. 1..0 */
    /*TODO*///		{ 0x14,0x14,0x50,0x50,0x14,0x14,0x50,0x50 },	/* .0.1 ..1. .1.. 1..1 */
    /*TODO*///		{ 0x55,0x14,0x50,0x11,0x41,0x00,0x44,0x05 },	/* .1.0 ..0. .0.. 0..0 */
    /*TODO*///		{ 0x05,0x00,0x41,0x44,0x14,0x11,0x50,0x55 },	/* .1.0 ..0. .0.. 0..1 */
    /*TODO*///		{ 0x41,0x00,0x44,0x05,0x55,0x14,0x50,0x11 },	/* .1.0 ..0. .0.. 1..0 */
    /*TODO*///		{ 0x14,0x11,0x50,0x55,0x05,0x00,0x41,0x44 },	/* .1.0 ..0. .0.. 1..1 */
    /*TODO*///		{ 0x50,0x11,0x55,0x14,0x44,0x05,0x41,0x00 },	/* .1.0 ..0. .1.. 0..0 */
    /*TODO*///		{ 0x00,0x05,0x44,0x41,0x11,0x14,0x55,0x50 },	/* .1.0 ..0. .1.. 0..1 */
    /*TODO*///		{ 0x15,0x04,0x10,0x01,0x01,0x10,0x04,0x15 },	/* .1.0 ..0. .1.. 1..0 */
    /*TODO*///		{ 0x51,0x54,0x45,0x40,0x40,0x45,0x54,0x51 },	/* .1.0 ..0. .1.. 1..1 */
    /*TODO*///		{ 0x01,0x10,0x04,0x15,0x15,0x04,0x10,0x01 },	/* .1.0 ..1. .0.. 0..0 */
    /*TODO*///		{ 0x44,0x41,0x50,0x55,0x55,0x50,0x41,0x44 },	/* .1.0 ..1. .0.. 0..1 */
    /*TODO*///		{ 0x10,0x01,0x15,0x04,0x04,0x15,0x01,0x10 },	/* .1.0 ..1. .0.. 1..0 */
    /*TODO*///		{ 0x55,0x14,0x50,0x11,0x55,0x14,0x50,0x11 },	/* .1.0 ..1. .0.. 1..1 */
    /*TODO*///		{ 0x05,0x00,0x00,0x05,0x55,0x50,0x50,0x55 },	/* .1.0 ..1. .1.. 0..0 */
    /*TODO*///		{ 0x11,0x50,0x14,0x55,0x11,0x50,0x14,0x55 },	/* .1.0 ..1. .1.. 0..1 */
    /*TODO*///		{ 0x54,0x51,0x51,0x54,0x04,0x01,0x01,0x04 },	/* .1.0 ..1. .1.. 1..0 */
    /*TODO*///		{ 0x04,0x45,0x01,0x40,0x04,0x45,0x01,0x40 },	/* .1.0 ..1. .1.. 1..1 */
    /*TODO*///		{ 0x40,0x45,0x45,0x40,0x10,0x15,0x15,0x10 },	/* .1.1 ..0. .0.. 0..0 */
    /*TODO*///		{ 0x15,0x04,0x10,0x01,0x45,0x54,0x40,0x51 },	/* .1.1 ..0. .0.. 0..1 */
    /*TODO*///		{ 0x51,0x51,0x45,0x45,0x01,0x01,0x15,0x15 },	/* .1.1 ..0. .0.. 1..0 */
    /*TODO*///		{ 0x01,0x10,0x04,0x15,0x51,0x40,0x54,0x45 },	/* .1.1 ..0. .0.. 1..1 */
    /*TODO*///		{ 0x14,0x14,0x00,0x00,0x44,0x44,0x50,0x50 },	/* .1.1 ..0. .1.. 0..0 */
    /*TODO*///		{ 0x50,0x41,0x55,0x44,0x00,0x11,0x05,0x14 },	/* .1.1 ..0. .1.. 0..1 */
    /*TODO*///		{ 0x00,0x41,0x00,0x41,0x11,0x50,0x11,0x50 },	/* .1.1 ..0. .1.. 1..0 */
    /*TODO*///		{ 0x45,0x04,0x40,0x01,0x51,0x10,0x54,0x15 },	/* .1.1 ..0. .1.. 1..1 */
    /*TODO*///		{ 0x11,0x14,0x55,0x50,0x00,0x05,0x44,0x41 },	/* .1.1 ..1. .0.. 0..0 */
    /*TODO*///		{ 0x54,0x15,0x51,0x10,0x40,0x01,0x45,0x04 },	/* .1.1 ..1. .0.. 0..1 */
    /*TODO*///		{ 0x04,0x01,0x40,0x45,0x15,0x10,0x51,0x54 },	/* .1.1 ..1. .0.. 1..0 */
    /*TODO*///		{ 0x10,0x51,0x15,0x54,0x04,0x45,0x01,0x40 },	/* .1.1 ..1. .0.. 1..1 */
    /*TODO*///		{ 0x55,0x50,0x41,0x44,0x44,0x41,0x50,0x55 },	/* .1.1 ..1. .1.. 0..0 */
    /*TODO*///		{ 0x05,0x14,0x00,0x11,0x11,0x00,0x14,0x05 },	/* .1.1 ..1. .1.. 0..1 */
    /*TODO*///		{ 0x41,0x44,0x55,0x50,0x50,0x55,0x44,0x41 },	/* .1.1 ..1. .1.. 1..0 */
    /*TODO*///		{ 0x14,0x05,0x11,0x00,0x00,0x11,0x05,0x14 },	/* .1.1 ..1. .1.. 1..1 */
    /*TODO*///	};
    /*TODO*///	int A;
    /*TODO*///	unsigned char *rom = memory_region(REGION_CPU1);
    /*TODO*///	int diff = memory_region_length(REGION_CPU1) / 2;
    /*TODO*///
    /*TODO*///
    /*TODO*///	memory_set_opcode_base(0,rom+diff);
    /*TODO*///
    /*TODO*///	for (A = 0x0000;A < 0x8000;A++)
    /*TODO*///	{
    /*TODO*///		int row,col;
    /*TODO*///		unsigned char src;
    /*TODO*///
    /*TODO*///
    /*TODO*///		src = rom[A];
    /*TODO*///
    /*TODO*///		/* pick the translation table from bits 0, 3, 6, 9, 12 and 14 of the address */
    /*TODO*///		row = (A & 1) + (((A >> 3) & 1) << 1) + (((A >> 6) & 1) << 2)
    /*TODO*///				+ (((A >> 9) & 1) << 3) + (((A >> 12) & 1) << 4) + (((A >> 14) & 1) << 5);
    /*TODO*///
    /*TODO*///		/* pick the offset in the table from bits 0, 2, 4 and 6 of the source data */
    /*TODO*///		col = ((src >> 0) & 1) + (((src >> 2) & 1) << 1) + (((src >> 4) & 1) << 2);
    /*TODO*///		/* the bottom half of the translation table is the mirror image of the top */
    /*TODO*///		if (src & 0x40) col = 7 - col;
    /*TODO*///
    /*TODO*///		/* decode the opcodes */
    /*TODO*///		rom[A + diff] = src ^ opcode_xortable[row][col] ^ 0x00;
    /*TODO*///
    /*TODO*///		/* decode the data */
    /*TODO*///		rom[A] = src ^ data_xortable[row][col];
    /*TODO*///	}
    /*TODO*///
    /*TODO*///	/* copy the opcodes from the not encrypted part of the ROMs */
    /*TODO*///	for (A = 0x8000;A < diff;A++)
    /*TODO*///		rom[A + diff] = rom[A];
    /*TODO*///}
    /*TODO*///
    /*TODO*///
    /*TODO*///void gardia_decode(void)
    /*TODO*///{
    /*TODO*///	/* not decoded yet! */
    /*TODO*///}
    /*TODO*///    
}
